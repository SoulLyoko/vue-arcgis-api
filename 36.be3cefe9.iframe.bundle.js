(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{"./node_modules/@arcgis/core/chunks/CheckerBoard.glsl.js":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return t})),__webpack_require__.d(__webpack_exports__,"b",(function(){return o}));var _views_3d_webgl_engine_core_shaderLibrary_output_ReadLinearDepth_glsl_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/output/ReadLinearDepth.glsl.js"),_views_3d_webgl_engine_core_shaderLibrary_shading_MultipassTerrainTest_glsl_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/shading/MultipassTerrainTest.glsl.js"),_views_3d_webgl_engine_core_shaderLibrary_util_ColorConversion_glsl_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/util/ColorConversion.glsl.js"),_views_3d_webgl_engine_core_shaderModules_interfaces_js__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderModules/interfaces.js"),_views_3d_webgl_engine_core_shaderModules_ShaderBuilder_js__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderModules/ShaderBuilder.js");function o(o){const t=new _views_3d_webgl_engine_core_shaderModules_ShaderBuilder_js__WEBPACK_IMPORTED_MODULE_4__.a;return t.extensions.add("GL_OES_standard_derivatives"),t.attributes.add("position","vec3"),t.attributes.add("uv0","vec2"),t.vertex.uniforms.add("proj","mat4").add("view","mat4"),t.varyings.add("vUV","vec2"),o.multipassTerrainEnabled&&t.varyings.add("depth","float"),t.vertex.code.add(_views_3d_webgl_engine_core_shaderModules_interfaces_js__WEBPACK_IMPORTED_MODULE_3__.a`
    void main(void) {
      vUV = uv0;
      ${o.multipassTerrainEnabled?"depth = (view * vec4(position, 1.0)).z;":""}
      gl_Position = proj * view * vec4(position, 1.0);
    }
  `),o.multipassTerrainEnabled&&(t.fragment.include(_views_3d_webgl_engine_core_shaderLibrary_output_ReadLinearDepth_glsl_js__WEBPACK_IMPORTED_MODULE_0__.a),t.include(_views_3d_webgl_engine_core_shaderLibrary_shading_MultipassTerrainTest_glsl_js__WEBPACK_IMPORTED_MODULE_1__.b,o)),t.fragment.uniforms.add("size","vec2").add("color1","vec4").add("color2","vec4"),t.fragment.include(_views_3d_webgl_engine_core_shaderLibrary_util_ColorConversion_glsl_js__WEBPACK_IMPORTED_MODULE_2__.a),t.fragment.code.add(_views_3d_webgl_engine_core_shaderModules_interfaces_js__WEBPACK_IMPORTED_MODULE_3__.a`
    void main() {
      ${o.multipassTerrainEnabled?"terrainDepthTest(gl_FragCoord, depth);":""}
      vec2 uvScaled = vUV / (2.0 * size);

      vec2 uv = fract(uvScaled - 0.25);
      vec2 ab = clamp((abs(uv - 0.5) - 0.25) / fwidth(uvScaled), -0.5, 0.5);
      float fade = smoothstep(0.25, 0.5, max(fwidth(uvScaled.x), fwidth(uvScaled.y)));
      float t = mix(abs(ab.x + ab.y), 0.5, fade);

      gl_FragColor = mix(color2, color1, t);
      ${o.OITEnabled?"gl_FragColor = premultiplyAlpha(gl_FragColor);":""}
    }
  `),t}const t=Object.freeze({__proto__:null,build:o})},"./node_modules/@arcgis/core/views/3d/analysis/AreaMeasurement/AreaMeasurementView3D.js":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"default",(function(){return AreaMeasurementView3D_m}));var tslib_es6=__webpack_require__("./node_modules/@arcgis/core/chunks/tslib.es6.js"),Accessor=__webpack_require__("./node_modules/@arcgis/core/core/Accessor.js"),maybe=__webpack_require__("./node_modules/@arcgis/core/core/maybe.js"),property=__webpack_require__("./node_modules/@arcgis/core/core/accessorSupport/decorators/property.js"),subclass=(__webpack_require__("./node_modules/@arcgis/core/core/arrayUtils.js"),__webpack_require__("./node_modules/@arcgis/core/core/has.js"),__webpack_require__("./node_modules/@arcgis/core/core/accessorSupport/ensureType.js"),__webpack_require__("./node_modules/@arcgis/core/core/accessorSupport/decorators/subclass.js")),defaultUnit=__webpack_require__("./node_modules/@arcgis/core/properties/defaultUnit.js"),AnalysisView3D=__webpack_require__("./node_modules/@arcgis/core/views/3d/analysis/AnalysisView3D.js"),Handles=__webpack_require__("./node_modules/@arcgis/core/core/Handles.js"),projection=__webpack_require__("./node_modules/@arcgis/core/geometry/projection.js"),projectionEllipsoid=__webpack_require__("./node_modules/@arcgis/core/geometry/projectionEllipsoid.js"),mathUtils=__webpack_require__("./node_modules/@arcgis/core/core/mathUtils.js"),Quantity=__webpack_require__("./node_modules/@arcgis/core/core/Quantity.js"),earcut=__webpack_require__("./node_modules/@arcgis/core/chunks/earcut.js"),vec2=__webpack_require__("./node_modules/@arcgis/core/chunks/vec2.js"),vec2f64=__webpack_require__("./node_modules/@arcgis/core/chunks/vec2f64.js"),vec3=__webpack_require__("./node_modules/@arcgis/core/chunks/vec3.js"),vec3f64=__webpack_require__("./node_modules/@arcgis/core/chunks/vec3f64.js"),vec4f64=__webpack_require__("./node_modules/@arcgis/core/chunks/vec4f64.js"),SpatialReference=__webpack_require__("./node_modules/@arcgis/core/geometry/SpatialReference.js"),intersectsBase=__webpack_require__("./node_modules/@arcgis/core/geometry/support/intersectsBase.js"),geometryEngine=__webpack_require__("./node_modules/@arcgis/core/geometry/geometryEngine.js"),Polygon=__webpack_require__("./node_modules/@arcgis/core/geometry/Polygon.js"),geodesicUtils=__webpack_require__("./node_modules/@arcgis/core/geometry/support/geodesicUtils.js"),support_mathUtils=__webpack_require__("./node_modules/@arcgis/core/views/3d/support/mathUtils.js");function measurementUtils_z(t,e,n){const r={distance:null};return Object(geodesicUtils.c)(r,[t[0],t[1]],[e[0],e[1]],n),r.distance}function k(t,e,n){const r=e[0]-t[0],o=e[1]-t[1],s=n[0]-t[0],i=n[1]-t[1];return.5*Math.abs(r*i-o*s)}function q(t,e,n,r){const o=G;return Object(projection.z)(t,r,measurementUtils_R)&&Object(projection.z)(e,r,measurementUtils_S)&&Object(projection.z)(n,r,U)?(o.setPoint(0,0,measurementUtils_R),o.setPoint(0,1,measurementUtils_S),o.setPoint(0,2,U),Math.abs(Object(geometryEngine.geodesicArea)(o,"square-meters"))):0}const measurementUtils_R=Object(vec3f64.f)(),measurementUtils_S=Object(vec3f64.f)(),U=Object(vec3f64.f)(),G=new Polygon.a({rings:[[measurementUtils_R,measurementUtils_S,U]],spatialReference:SpatialReference.a.WGS84}),measurementUtils_W=Object(vec3f64.f)();var viewUtils=__webpack_require__("./node_modules/@arcgis/core/views/3d/analysis/support/viewUtils.js"),ElevationProvider=__webpack_require__("./node_modules/@arcgis/core/views/3d/support/ElevationProvider.js");class MeasurementData_D{constructor(e,t){this.positionsWorldCoords=[],this.positionsRenderCoords=[],this.positionsProjectedWorldCoords=[],this.positionsFittedRenderCoords=[],this.positionsGeographic=[],this.positionsSpherical=[],this.positionsStereographic=[],this.pathSegmentLengths=[],this.geodesicPathSegmentLengths=[],this.perimeterSegmentLengths=[],this.intersectingSegments=new Set,this.geodesicIntersectingSegments=new Set,this.areaCentroidWorldCoords=Object(vec3f64.f)(),this.areaCentroidRenderCoords=Object(vec3f64.f)(),this.geodesicAreaCentroidRenderCoords=Object(vec3f64.f)(),this._length=0,this._centroidRenderCoords=Object(vec3f64.f)(),this._planeWorldCoords=Object(vec4f64.e)(),this._worldUp=Object(vec3f64.f)(),this._worldTangent=Object(vec3f64.f)(),this._frame=[Object(vec3f64.f)(),Object(vec3f64.f)(),Object(vec3f64.f)()],this._pathVersion=-1,this._validMeasurement=!1,this._hasCursorPoint=!1,this._mode=null,this._tempU=Object(vec3f64.f)(),this._tempV=Object(vec3f64.f)(),this._tempVec3=Object(vec3f64.f)(),this._tempSphere={center:Object(vec3f64.f)(),radius:0},this._sceneView=e,this.unitNormalizer=t}update(e,s,o,r,n,h,d){const g=this.unitNormalizer,l=this._sceneView.renderSpatialReference,c=this.unitNormalizer.spatialReference,p=Object(maybe.l)(s);if(this._pathVersion===e.version&&this._validMeasurement===r&&!d&&this._hasCursorPoint===p&&this._mode===h)return!1;this._pathVersion=e.version,this._validMeasurement=r,this._hasCursorPoint=p;const m=e.numVertices;this._resize(m);const u=Object(projectionEllipsoid.g)(o.spatialReference),_=Object(projection.b)(o.spatialReference,u)&&Object(projection.a)(o.spatialReference),C=this.positionsGeographic,f=this.positionsWorldCoords,w=this.positionsRenderCoords,M=this.positionsSpherical;e.forEachVertexPosition(((e,t)=>{(function B(e,t){t.hasZ||(t.z=Object(maybe.v)(Object(ElevationProvider.b)(e,t,"ground"),0))})(o.elevationProvider,e),Object(projection.t)(e,f[t],c),Object(projection.t)(e,w[t],l),_&&(Object(projection.u)(e,C[t]),Object(projection.t)(e,M[t],u),Object(vec3.t)(M[t],M[t]))}));const A=this._updatePathLengths(r);if(this.pathLength=this._length>1?new Quantity.a(g.normalizeDistance(A),"meters"):null,_){const e=this._updateGeodesicPathLengths(r,c);this.geodesicPathLength=this._length>1?new Quantity.a(e,"meters"):null}else this.geodesicPathLength=null;return this._updateCursorSegmentLength(e,s),this._updateMode(e,h),r?(this._updateArea(o,g,l,c,n),_&&this._updateGeodesicArea(o),!0):(this.area=null,this.geodesicArea=null,this.perimeterLength=null,this.triangleIndices=null,this.geodesicTriangleIndices=null,this.intersectingSegments.clear(),this.geodesicIntersectingSegments.clear(),!0)}getData(){return{positionsWorldCoords:this.positionsWorldCoords,positionsRenderCoords:this.positionsRenderCoords,positionsProjectedWorldCoords:this.positionsProjectedWorldCoords,positionsFittedRenderCoords:this.positionsFittedRenderCoords,positionsGeographic:this.positionsGeographic,positionsSpherical:this.positionsSpherical,positionsStereographic:this.positionsStereographic,pathSegmentLengths:this.pathSegmentLengths,geodesicPathSegmentLengths:this.geodesicPathSegmentLengths,perimeterSegmentLengths:this.perimeterSegmentLengths,intersectingSegments:this.intersectingSegments,geodesicIntersectingSegments:this.geodesicIntersectingSegments,triangleIndices:this.triangleIndices,geodesicTriangleIndices:this.geodesicTriangleIndices,areaCentroidWorldCoords:this.areaCentroidWorldCoords,areaCentroidRenderCoords:this.areaCentroidRenderCoords,geodesicAreaCentroidRenderCoords:this.geodesicAreaCentroidRenderCoords,fittingMode:this.fittingMode,area:this.area,geodesicArea:this.geodesicArea,pathLength:this.pathLength,geodesicPathLength:this.geodesicPathLength,perimeterLength:this.perimeterLength,cursorSegmentLength:this.cursorSegmentLength,geodesicCursorSegmentLength:this.geodesicCursorSegmentLength,unitNormalizer:this.unitNormalizer,actualMeasurementMode:this.actualMeasurementMode}}_resize(e){for(e<this._length&&(this.positionsWorldCoords.length=e,this.positionsRenderCoords.length=e,this.positionsProjectedWorldCoords.length=e,this.positionsFittedRenderCoords.length=e,this.positionsGeographic.length=e,this.positionsSpherical.length=e,this.positionsStereographic.length=e,this.pathSegmentLengths.length=e,this.geodesicPathSegmentLengths.length=e,this.perimeterSegmentLengths.length=e,this._length=e);this._length<e;)this.positionsWorldCoords.push(Object(vec3f64.f)()),this.positionsRenderCoords.push(Object(vec3f64.f)()),this.positionsProjectedWorldCoords.push(Object(vec2f64.b)()),this.positionsFittedRenderCoords.push(Object(vec3f64.f)()),this.positionsGeographic.push(Object(vec3f64.f)()),this.positionsSpherical.push(Object(vec3f64.f)()),this.positionsStereographic.push(Object(vec2f64.b)()),this.pathSegmentLengths.push(0),this.geodesicPathSegmentLengths.push(0),this.perimeterSegmentLengths.push(0),++this._length}_updatePathLengths(e){const t=this.positionsWorldCoords,s=this.pathSegmentLengths;let i=0;for(let o=0;o<this._length;++o){const r=s[o]=Object(vec3.o)(t[o],t[(o+1)%this._length]);(o<this._length-1||e)&&(i+=r)}return i}_updateGeodesicPathLengths(e,t){const s=this.positionsGeographic,i=this.geodesicPathSegmentLengths;let o=0;for(let r=0;r<this._length;++r){const n=i[r]=measurementUtils_z(s[r],s[(r+1)%this._length],t);(r<this._length-1||e)&&(o+=n)}return o}_updateArea(e,t,s,o,n){const h=e.renderCoordsHelper,a=this.positionsWorldCoords,d=this.positionsRenderCoords,C=this.positionsProjectedWorldCoords,f=this.positionsFittedRenderCoords,S=this._planeWorldCoords,L=this._centroidRenderCoords;Object(viewUtils.a)(d,L),h.worldUpAtPosition(L,this._worldUp),h.worldBasisAtPosition(L,0,this._worldTangent),Object(projection.q)(L,this._worldUp,s,this._worldUp,o),Object(projection.q)(L,this._worldTangent,s,this._worldTangent,o),a.length>2&&function measurementUtils_M(t,e){if(t.length<3)throw new Error("need at least 3 points to fit a plane");Object(support_mathUtils.k)(t[0],t[1],t[2],e)}(a,S),this.fittingMode=this._selectFittingMode(S,a,this._worldUp,n);let P=0;if("horizontal"===this.fittingMode){let e=-1/0;d.forEach(((t,s)=>{const i=h.getAltitude(d[s]);i>e&&(e=i,P=s)}))}const R=a[P];let j=S,A=this._worldTangent;"horizontal"===this.fittingMode?j=this._worldUp:"vertical"===this.fittingMode&&(j=this._tempVec3,A=this._worldUp,Object(support_mathUtils.g)(S,this._worldUp,j)),Object(vec3.m)(this._frame[2],j),Object(support_mathUtils.g)(A,j,this._frame[0]),Object(vec3.i)(this._frame[1],this._frame[0],this._frame[2]),Object(vec3.u)(this._frame[1],this._frame[1]);const W=this._tempVec3,v=this._tempU,z=this._tempV;for(let i=0;i<this._length;++i){const e=C[i],t=f[i];Object(vec3.l)(W,a[i],R),Object(vec2.s)(e,Object(vec3.j)(this._frame[0],W),Object(vec3.j)(this._frame[1],W)),Object(vec3.g)(v,this._frame[0],e[0]),Object(vec3.g)(z,this._frame[1],e[1]),Object(vec3.h)(W,v,z),Object(vec3.h)(W,W,R),Object(projection.y)(W,o,t,s)}this.perimeterLength=this._length>0?new Quantity.a(t.normalizeDistance(this._updatePerimeterLengths()),"meters"):null,Object(viewUtils.a)(f,this.areaCentroidRenderCoords),Object(projection.y)(this.areaCentroidRenderCoords,s,this.areaCentroidWorldCoords,o),this._updateIntersectingSegments(),this.area=0===this.intersectingSegments.size?new Quantity.a(t.normalizeArea(this._computeArea()),"square-meters"):null}_updateGeodesicArea(e){const t=e.renderCoordsHelper,s=this.positionsSpherical,o=this.positionsStereographic,n=this._tempVec3,h=function x(n,r=null,s=!0){const c=(t,e)=>{if(0===e[0]&&0===e[1]&&0===e[2])return!1;for(let n=0;n<t.length;++n)if(Object(vec3.j)(e,t[n])<-1e-6)return!1;return!0};if(0===n.length)return!1;if(1===n.length)return r&&Object(vec3.m)(r,n[0]),!0;Object(vec3.y)(measurementUtils_W,0,0,0);for(let t=0;t<n.length;++t)Object(vec3.h)(measurementUtils_W,measurementUtils_W,n[t]);if(Object(vec3.t)(measurementUtils_W,measurementUtils_W),c(n,measurementUtils_W))return r&&Object(vec3.m)(r,measurementUtils_W),!0;if(!s)return!1;for(let t=0;t<n.length;++t)for(let e=0;e<n.length;++e)if(t!==e&&(Object(vec3.i)(measurementUtils_W,n[t],n[e]),Object(vec3.t)(measurementUtils_W,measurementUtils_W),c(n,measurementUtils_W)))return r&&Object(vec3.m)(r,measurementUtils_W),!0;return!1}(s,n);if(!h)return void(this.geodesicArea=null);const a=this._tempU,d=this._tempV;Object(support_mathUtils.o)(n,a,d);for(let i=0;i<this._length;++i){const e=Object(vec3.j)(s[i],a),t=Object(vec3.j)(s[i],d),h=Object(vec3.j)(s[i],n);Object(vec2.s)(o[i],e/h,t/h)}Object(vec3.g)(n,n,Object(projectionEllipsoid.e)(e.spatialReference).radius),t.toRenderCoords(n,Object(projectionEllipsoid.g)(e.spatialReference),this.geodesicAreaCentroidRenderCoords),this._updateGeodesicIntersectingSegments(),this.geodesicArea=h&&0===this.geodesicIntersectingSegments.size?new Quantity.a(this._computeGeodesicArea(),"square-meters"):null}_updatePerimeterLengths(){const e=this.positionsProjectedWorldCoords,t=this.perimeterSegmentLengths;let s=0;for(let i=0;i<this._length;++i)s+=t[i]=Object(vec2.b)(e[i],e[(i+1)%this._length]);return s}_updateIntersectingSegments(){const e=this.positionsProjectedWorldCoords,t=this.intersectingSegments;t.clear();for(let s=0;s<this._length;++s)for(let i=s+2;i<this._length;++i){if((i+1)%this._length===s)continue;const o=e[s],r=e[(s+1)%this._length],n=e[i],h=e[(i+1)%this._length];Object(intersectsBase.e)(o,r,n,h)&&(t.add(s),t.add(i))}}_computeArea(){const e=this.positionsProjectedWorldCoords,t=MeasurementData_q(e,2),s=this.triangleIndices=new Uint32Array(Object(earcut.a)(t,[],2));let i=0;for(let o=0;o<s.length;o+=3)i+=k(e[s[o]],e[s[o+1]],e[s[o+2]]);return i}_updateGeodesicIntersectingSegments(){const e=this.positionsStereographic,t=this.geodesicIntersectingSegments;t.clear();for(let s=0;s<this._length;++s)for(let i=s+2;i<this._length;++i){if((i+1)%this._length===s)continue;const o=e[s],r=e[(s+1)%this._length],n=e[i],h=e[(i+1)%this._length];Object(intersectsBase.e)(o,r,n,h)&&(t.add(s),t.add(i))}}_computeGeodesicArea(){const e=this.positionsGeographic,t=MeasurementData_q(this.positionsStereographic,2),s=this.geodesicTriangleIndices=new Uint32Array(Object(earcut.a)(t,[],2));let i=0;for(let o=0;o<s.length;o+=3)i+=q(e[s[o]],e[s[o+1]],e[s[o+2]],SpatialReference.a.WGS84);return i}_selectFittingMode(t,s,i,o){const r=s.map((e=>Math.abs(function b(t,e){return Object(vec3.j)(t,e)+t[3]}(t,e)))).reduce(((e,t)=>Math.max(e,t)),0);!function measurementUtils_y(o,s){const i=s.center;Object(vec3.y)(i,0,0,0);for(let t=0;t<o.length;++t)Object(vec3.h)(i,i,o[t]);Object(vec3.g)(i,i,1/o.length);let f=0;for(let t=0;t<o.length;++t)f=Math.max(f,Object(vec3.n)(i,o[t]));s.radius=Math.sqrt(f)}(s,this._tempSphere);const n=r/(2*this._tempSphere.radius),h=n<o.maxRelativeErrorCoplanar,a=n<o.maxRelativeErrorAlmostCoplanar;let d="horizontal";return h?d="oblique":a&&(d=Math.abs(Object(vec3.j)(i,t))>Math.cos(Object(mathUtils.h)(o.verticalAngleThreshold))?"horizontal":"vertical"),d}_updateCursorSegmentLength(e,s){const o=e.lastPoint;!e.isValidPolygon&&Object(maybe.l)(o)&&Object(maybe.l)(s)?(this.geodesicCursorSegmentLength=new Quantity.a(function measurementUtils_w(t,e){if(!Object(projection.u)(t,measurementUtils_R)||!Object(projection.u)(e,measurementUtils_S))return 0;const n={distance:null};return Object(geodesicUtils.c)(n,[measurementUtils_R[0],measurementUtils_R[1]],[measurementUtils_S[0],measurementUtils_S[1]]),n.distance}(o,s),"meters"),this.cursorSegmentLength=new Quantity.a(this.unitNormalizer.normalizeDistance(function measurementUtils_P(t,e,n){return Object(projection.t)(t,measurementUtils_R,n)&&Object(projection.t)(e,measurementUtils_S,n)?Object(vec3.o)(measurementUtils_R,measurementUtils_S):0}(o,s,this.unitNormalizer.spatialReference)),"meters")):(this.geodesicCursorSegmentLength=null,this.cursorSegmentLength=null)}_updateMode(e,s){if(0===s){this.actualMeasurementMode="euclidean";let s=0;null!=this.geodesicPathLength&&(s+=this.geodesicPathLength.value),!e.isValidPolygon&&Object(maybe.l)(this.geodesicCursorSegmentLength)&&(s+=this.geodesicCursorSegmentLength.value),s>H&&(this.actualMeasurementMode="geodesic")}else this.actualMeasurementMode=1===s?"euclidean":"geodesic";null==this.geodesicPathLength&&(this.actualMeasurementMode="euclidean"),this._mode=s}}function MeasurementData_q(e,t){const s=new Float64Array(e.length*t);for(let i=0;i<e.length;++i){const o=e[i];for(let e=0;e<t;++e)s[i*t+e]=o[e]}return s}const H=1e5;var UnitNormalizer=__webpack_require__("./node_modules/@arcgis/core/views/3d/analysis/support/UnitNormalizer.js");let AreaMeasurementController_h=class extends Accessor.a{constructor(e){super(e),this._handles=new Handles.a}initialize(){const e=this.view.spatialReference,t=Object(projectionEllipsoid.g)(e),s=t===projectionEllipsoid.a?projectionEllipsoid.d:t,a=!e||Object(projection.b)(e,s)?s:e,r=new UnitNormalizer.a(a);this._measurementDataManager=new MeasurementData_D(this.view,r),this._handles.add([this.analysisViewData.path.on("change",(()=>this._update())),this.analysisViewData.watch("cursorPoint",(()=>this._update()),!0),this.analysisViewData.watch("mode",(()=>this._update()),!0)]),this._update()}destroy(){this._handles=Object(maybe.e)(this._handles)}_update(e=!1){const t=this.analysisViewData;if(this._measurementDataManager.update(t.path,t.cursorPoint,this.view,t.validMeasurement,{maxRelativeErrorCoplanar:.005,maxRelativeErrorAlmostCoplanar:.01,verticalAngleThreshold:80},t.mode,e)){const e=this._measurementDataManager.getData();this._set("measurementData",e),t.measurementData=e}}};Object(tslib_es6.a)([Object(property.b)({constructOnly:!0})],AreaMeasurementController_h.prototype,"view",void 0),Object(tslib_es6.a)([Object(property.b)({constructOnly:!0})],AreaMeasurementController_h.prototype,"analysis",void 0),Object(tslib_es6.a)([Object(property.b)({readOnly:!0})],AreaMeasurementController_h.prototype,"measurementData",void 0),Object(tslib_es6.a)([Object(property.b)({constructOnly:!0})],AreaMeasurementController_h.prototype,"analysisViewData",void 0),AreaMeasurementController_h=Object(tslib_es6.a)([Object(subclass.a)("esri.views.3d.analysis.AreaMeasurement.support.AreaMeasurementController")],AreaMeasurementController_h);var Evented=__webpack_require__("./node_modules/@arcgis/core/core/Evented.js"),watchUtils=__webpack_require__("./node_modules/@arcgis/core/core/watchUtils.js"),Point=__webpack_require__("./node_modules/@arcgis/core/geometry/Point.js"),aaBoundingRect=__webpack_require__("./node_modules/@arcgis/core/geometry/support/aaBoundingRect.js"),coordinateHelper=__webpack_require__("./node_modules/@arcgis/core/views/interactive/coordinateHelper.js"),EditGeometry=__webpack_require__("./node_modules/@arcgis/core/views/interactive/editGeometry/EditGeometry.js"),EditGeometryOperations=__webpack_require__("./node_modules/@arcgis/core/views/interactive/editGeometry/EditGeometryOperations.js");let AreaMeasurementPathHelper_g=class extends Evented.a.EventedAccessor{constructor(e={}){super(e),this._handles=new Handles.a,this._version=0,this._internalGeometryChange=!1,this._extent=Object(aaBoundingRect.n)()}destroy(){this._handles=Object(maybe.e)(this._handles)}set areaMeasurement(e){this._set("areaMeasurement",e),Object(maybe.l)(e)&&Object(maybe.l)(this.view)&&this._initialize(e,this.view)}set view(e){this._set("view",e),Object(maybe.l)(e)&&Object(maybe.l)(this.areaMeasurement)&&this._initialize(this.areaMeasurement,e)}get initialized(){return Object(maybe.l)(this.areaMeasurement)&&Object(maybe.l)(this.view)}get version(){return this._version}get isValidPolygon(){return this.initialized&&this.editGeometry.components.length>0&&this.editGeometry.components[0].isClosed()}get extent(){if(this.initialized&&this.editGeometry.components.length>0&&this.editGeometry.components[0].vertices.length>0){const e=Object(aaBoundingRect.n)(this._extent);return this.forEachVertex((t=>{Object(aaBoundingRect.q)(e,t.pos)})),e}return null}get spatialReference(){return this.initialized?this.editGeometry.coordinateHelper.spatialReference:null}_initialize(e,t){this._handles.removeAll(),this._handles.add(Object(watchUtils.a)(e,"geometry",(()=>this._updateEditGeometryFromModelGeometry(e,t)),!0)),this._makeDirty(!0)}_makeDirty(e=!1){this.notifyChange("isValidPolygon"),this.notifyChange("initialized"),this.notifyChange("extent"),e&&this.notifyChange("numVertices")}_updateEditGeometryFromModelGeometry(e,t){this._version++,this._internalGeometryChange||(this._handles.remove("EditGeometry"),Object(maybe.l)(e.geometry)?this._editGeometryOperations=EditGeometryOperations.a.fromGeometry(e.geometry,t.state.viewingMode):this._editGeometryOperations=new EditGeometryOperations.a(new EditGeometry.c("polygon",Object(coordinateHelper.a)(!0,!1,t.spatialReference),t.state.viewingMode)),this._makeDirty(!0),this.emit("change"),this._handles.add(this.editGeometry.on("change",(t=>{this._makeDirty(null!=t.addedVertices||null!=t.removedVertices),this._internalGeometryChange=!0,e.geometry=this.numVertices>0?this.editGeometry.geometry:null,this._internalGeometryChange=!1})),"EditGeometry"))}get editGeometry(){return this._editGeometryOperations.data}get vertices(){const e=[];return this.forEachVertex((t=>{e.push(t)})),e}get numVertices(){return this.initialized&&this.editGeometry.components.length>0?this.editGeometry.components[0].vertices.length:0}get lastPoint(){if(this.initialized&&this.editGeometry.components.length>0){const e=this.editGeometry.components[0].getLastVertex();if(Object(maybe.l)(e))return this.editGeometry.coordinateHelper.vectorToPoint(e.pos)}return null}getVertex(e){if(!this.initialized||0===this.editGeometry.components.length||0===this.editGeometry.components[0].vertices.length)return null;const t=this.editGeometry.components[0].vertices[0];let i=t;do{if(i.index===e)return i;i=i.rightEdge.rightVertex}while(i!==t&&null!=i);return null}getVertexPositionAsPoint(e){return this.editGeometry.coordinateHelper.vectorToPoint(e.pos)}getVertexPositionAsPointFromIndex(e){return this.editGeometry.coordinateHelper.vectorToPoint(this.getVertex(e).pos)}forEachVertex(e){this.initialized&&this.editGeometry.components.length>0&&this.editGeometry.components[0].iterateVertices(e)}forEachVertexPosition(e){const t=this.editGeometry.coordinateHelper;this.forEachVertex(((i,r)=>{t.vectorToPoint(i.pos,AreaMeasurementPathHelper_G),e(AreaMeasurementPathHelper_G,r)}))}clear(){Object(maybe.l)(this.areaMeasurement)&&(this.areaMeasurement.geometry=null)}add(e){if(!this.initialized)return null;if(0===this.editGeometry.components.length){const e=Object(maybe.u)(this.view);this.editGeometry.components.push(new EditGeometry.a(e.spatialReference,e.state.viewingMode))}const t=this._editGeometryOperations.appendVertex(this.editGeometry.coordinateHelper.pointToVector(e));return this.emit("change"),t}close(){if(!this.initialized||0===this.editGeometry.components.length)return null;const e=this._editGeometryOperations.closeComponent(this.editGeometry.components[0]);return this.emit("change"),e}ensureContains(e,t=""){let i=!1;if(this.editGeometry.components.forEach((t=>{t.iterateVertices((t=>{t===e&&(i=!0)}))})),!i)throw new Error(`vertex doesnt exist ${t}`);return i}setVertexPosition(e,t){if(!this.initialized)return null;const i=this._editGeometryOperations.setVertexPosition(e,this.editGeometry.coordinateHelper.pointToVector(t));return this.emit("change"),i}equals(e){if(this.numVertices!==e.numVertices)return!1;let t=!0;return this.forEachVertexPosition(((i,r)=>{const o=e.getVertexPositionAsPointFromIndex(r);i.equals(o)||(t=!1)})),!!t}};Object(tslib_es6.a)([Object(property.b)({value:null})],AreaMeasurementPathHelper_g.prototype,"areaMeasurement",null),Object(tslib_es6.a)([Object(property.b)({value:null})],AreaMeasurementPathHelper_g.prototype,"view",null),Object(tslib_es6.a)([Object(property.b)()],AreaMeasurementPathHelper_g.prototype,"isValidPolygon",null),Object(tslib_es6.a)([Object(property.b)()],AreaMeasurementPathHelper_g.prototype,"extent",null),Object(tslib_es6.a)([Object(property.b)()],AreaMeasurementPathHelper_g.prototype,"spatialReference",null),Object(tslib_es6.a)([Object(property.b)()],AreaMeasurementPathHelper_g.prototype,"numVertices",null),AreaMeasurementPathHelper_g=Object(tslib_es6.a)([Object(subclass.a)("esri.views.3d.analysis.AreaMeasurement.support.AreaMeasurement3DPathHelper")],AreaMeasurementPathHelper_g);const AreaMeasurementPathHelper_G=new Point.a;let AreaMeasurementView3DData_i=class extends Accessor.a{constructor(){super(...arguments),this.measurementData=null,this.unitNormalizer=new UnitNormalizer.a,this.path=new AreaMeasurementPathHelper_g,this.lastDraggedVertex=null,this.mode=0}destroy(){this.measurementData=null,this.path=Object(maybe.e)(this.path)}get validMeasurement(){return this.path.isValidPolygon}};Object(tslib_es6.a)([Object(property.b)()],AreaMeasurementView3DData_i.prototype,"measurementData",void 0),Object(tslib_es6.a)([Object(property.b)()],AreaMeasurementView3DData_i.prototype,"validMeasurement",null),Object(tslib_es6.a)([Object(property.b)()],AreaMeasurementView3DData_i.prototype,"unitNormalizer",void 0),Object(tslib_es6.a)([Object(property.b)()],AreaMeasurementView3DData_i.prototype,"path",void 0),Object(tslib_es6.a)([Object(property.b)()],AreaMeasurementView3DData_i.prototype,"lastDraggedVertex",void 0),Object(tslib_es6.a)([Object(property.b)()],AreaMeasurementView3DData_i.prototype,"cursorPoint",void 0),Object(tslib_es6.a)([Object(property.b)()],AreaMeasurementView3DData_i.prototype,"mode",void 0),AreaMeasurementView3DData_i=Object(tslib_es6.a)([Object(subclass.a)("esri.views.3d.analysis.AreaMeasurement.support.AreaMeasurementView3DData")],AreaMeasurementView3DData_i);__webpack_require__("./node_modules/@arcgis/core/intl.js");var quantityFormatUtils=__webpack_require__("./node_modules/@arcgis/core/core/quantityFormatUtils.js"),reactiveUtils=__webpack_require__("./node_modules/@arcgis/core/core/reactiveUtils.js"),unitUtils=__webpack_require__("./node_modules/@arcgis/core/core/unitUtils.js"),mat4=__webpack_require__("./node_modules/@arcgis/core/chunks/mat4.js"),mat4f64=__webpack_require__("./node_modules/@arcgis/core/chunks/mat4f64.js"),support_viewUtils=__webpack_require__("./node_modules/@arcgis/core/views/3d/interactive/measurementTools/support/viewUtils.js"),LabelVisualElement=__webpack_require__("./node_modules/@arcgis/core/views/3d/interactive/visualElements/LabelVisualElement.js"),LineVisualElement=__webpack_require__("./node_modules/@arcgis/core/views/3d/interactive/visualElements/LineVisualElement.js"),vec4=__webpack_require__("./node_modules/@arcgis/core/chunks/vec4.js"),Object3DVisualElement=__webpack_require__("./node_modules/@arcgis/core/views/3d/interactive/visualElements/Object3DVisualElement.js"),Geometry=__webpack_require__("./node_modules/@arcgis/core/views/3d/webgl-engine/lib/Geometry.js"),GLMaterial=__webpack_require__("./node_modules/@arcgis/core/views/3d/webgl-engine/lib/GLMaterial.js"),Material=__webpack_require__("./node_modules/@arcgis/core/views/3d/webgl-engine/lib/Material.js"),DefaultBufferWriter=__webpack_require__("./node_modules/@arcgis/core/views/3d/webgl-engine/materials/internal/DefaultBufferWriter.js"),MaterialUtil=__webpack_require__("./node_modules/@arcgis/core/views/3d/webgl-engine/materials/internal/MaterialUtil.js"),MultipassTerrainTest_glsl=__webpack_require__("./node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/shading/MultipassTerrainTest.glsl.js"),View_glsl=__webpack_require__("./node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/util/View.glsl.js"),ReloadableShaderModule=__webpack_require__("./node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderTechnique/ReloadableShaderModule.js"),ShaderTechnique=__webpack_require__("./node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderTechnique/ShaderTechnique.js"),ShaderTechniqueConfiguration=__webpack_require__("./node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderTechnique/ShaderTechniqueConfiguration.js"),DefaultVertexAttributeLocations=__webpack_require__("./node_modules/@arcgis/core/views/3d/webgl-engine/lib/DefaultVertexAttributeLocations.js"),OrderIndependentTransparency=__webpack_require__("./node_modules/@arcgis/core/views/3d/webgl-engine/lib/OrderIndependentTransparency.js"),Program=__webpack_require__("./node_modules/@arcgis/core/views/3d/webgl-engine/lib/Program.js"),CheckerBoard_glsl=__webpack_require__("./node_modules/@arcgis/core/chunks/CheckerBoard.glsl.js"),renderState=__webpack_require__("./node_modules/@arcgis/core/views/webgl/renderState.js");class CheckerBoardTechnique_y extends ShaderTechnique.a{initializeProgram(r){const e=CheckerBoardTechnique_y.shader.get(),t=this.configuration,o=e.build({OITEnabled:0===t.transparencyPassType,multipassTerrainEnabled:t.multipassTerrainEnabled,cullAboveGround:t.cullAboveGround});return new Program.a(r.rctx,o,DefaultVertexAttributeLocations.a)}bindPass(r,o){Object(View_glsl.c)(this.program,o.camera.projectionMatrix),this.program.setUniform2fv("size",r.size),this.program.setUniform4fv("color1",r.color1),this.program.setUniform4fv("color2",r.color2),o.multipassTerrainEnabled&&(this.program.setUniform2fv("cameraNearFar",o.camera.nearFar),this.program.setUniform2fv("inverseViewport",o.inverseViewport),Object(MultipassTerrainTest_glsl.a)(this.program,o))}bindDraw(r){Object(View_glsl.d)(this.program,r)}setPipelineState(r){const e=this.configuration,t=3===r,o=2===r;return Object(renderState.g)({blending:e.transparent?t?CheckerBoardTechnique_v:Object(OrderIndependentTransparency.a)(r):null,depthTest:{func:Object(OrderIndependentTransparency.b)(r)},depthWrite:t?e.writeDepth&&renderState.e:Object(OrderIndependentTransparency.c)(r),colorWrite:renderState.d,polygonOffset:t||o?e.polygonOffset&&T:{factor:-1,units:-25}})}initializePipeline(){return this.setPipelineState(this.configuration.transparencyPassType)}}CheckerBoardTechnique_y.shader=new ReloadableShaderModule.a(CheckerBoard_glsl.a,(()=>__webpack_require__.e(226).then(__webpack_require__.bind(null,"./node_modules/@arcgis/core/views/3d/webgl-engine/shaders/CheckerBoard.glsl.js"))));const T={factor:0,units:-25},CheckerBoardTechnique_v=Object(renderState.h)(770,1,771,771);class CheckerBoardTechnique_j extends ShaderTechniqueConfiguration.a{constructor(){super(...arguments),this.transparent=!1,this.writeDepth=!0,this.polygonOffset=!1,this.transparencyPassType=3,this.multipassTerrainEnabled=!1,this.cullAboveGround=!1}}Object(tslib_es6.a)([Object(ShaderTechniqueConfiguration.b)()],CheckerBoardTechnique_j.prototype,"transparent",void 0),Object(tslib_es6.a)([Object(ShaderTechniqueConfiguration.b)()],CheckerBoardTechnique_j.prototype,"writeDepth",void 0),Object(tslib_es6.a)([Object(ShaderTechniqueConfiguration.b)()],CheckerBoardTechnique_j.prototype,"polygonOffset",void 0),Object(tslib_es6.a)([Object(ShaderTechniqueConfiguration.b)({count:4})],CheckerBoardTechnique_j.prototype,"transparencyPassType",void 0),Object(tslib_es6.a)([Object(ShaderTechniqueConfiguration.b)()],CheckerBoardTechnique_j.prototype,"multipassTerrainEnabled",void 0),Object(tslib_es6.a)([Object(ShaderTechniqueConfiguration.b)()],CheckerBoardTechnique_j.prototype,"cullAboveGround",void 0);class CheckerBoardMaterial_u extends Material.a{constructor(e){super(e,CheckerBoardMaterial_h),this.techniqueConfig=new CheckerBoardTechnique_j}dispose(){}getPassParameters(){return this.parameters}getTechniqueConfig(e,t){return this.techniqueConfig.transparent=this.parameters.transparent,this.techniqueConfig.writeDepth=this.parameters.writeDepth,this.techniqueConfig.polygonOffset=this.parameters.polygonOffset,this.techniqueConfig.transparencyPassType=t?t.transparencyPassType:3,this.techniqueConfig.multipassTerrainEnabled=!!t&&t.multipassTerrainEnabled,this.techniqueConfig.cullAboveGround=!!t&&t.cullAboveGround,this.techniqueConfig}intersect(e,t,r,s,i,a,o){return Object(MaterialUtil.i)(e,t,s,i,a,void 0,o)}requiresSlot(e){let t=2;return this.parameters.transparent&&(t=this.parameters.writeDepth?4:7),e===t||20===e}createGLMaterial(e){return 0===e.output||7===e.output?new CheckerBoardMaterial_p(e):null}createBufferWriter(){return new DefaultBufferWriter.a(DefaultBufferWriter.d)}}class CheckerBoardMaterial_p extends GLMaterial.a{updateParameters(e){return this.ensureTechnique(CheckerBoardTechnique_y,e)}beginSlot(e){return this.updateParameters(e)}bind(e,t){t.bindPass(this._material.getPassParameters(),e)}}const CheckerBoardMaterial_h={size:[1,1],color1:[.75,.75,.75,1],color2:[.5,.5,.5,1],transparent:!1,writeDepth:!0,polygonOffset:!1,...Material.b};class MeasurementAreaVisualElement_d extends Object3DVisualElement.a{constructor(e){super(e),this._checkerBoardMaterial=null,this._renderOccluded=4,this._geometry=null,this._size=[1,1],this._color1=Object(vec4f64.g)(1,.5,0,.5),this._color2=Object(vec4f64.g)(1,1,1,.5),this.applyProps(e)}get renderOccluded(){return this._renderOccluded}set renderOccluded(e){e!==this._renderOccluded&&(this._renderOccluded=e,this.updateMaterial())}get geometry(){return this._geometry}set geometry(e){this._geometry=e,this.geometryChanged()}get size(){return this._size}set size(e){this._size=e,this.updateMaterial()}get color1(){return this._color1}set color1(e){Object(vec4.g)(e,this._color1)||(Object(vec4.c)(this._color1,e),this.updateMaterial())}get color2(){return this._color2}set color2(e){Object(vec4.g)(e,this._color2)||(Object(vec4.c)(this._color2,e),this.updateMaterial())}updateMaterial(){Object(maybe.l)(this._checkerBoardMaterial)&&this._checkerBoardMaterial.setParameters({size:this._size,color1:this._color1,color2:this._color2,renderOccluded:this._renderOccluded})}createExternalResources(){this._checkerBoardMaterial=new CheckerBoardMaterial_u({size:this._size,color1:this._color1,color2:this._color2,transparent:!0,writeDepth:!1,polygonOffset:!0,renderOccluded:4})}destroyExternalResources(){this._checkerBoardMaterial=null}forEachExternalMaterial(r){Object(maybe.l)(this._checkerBoardMaterial)&&r(this._checkerBoardMaterial)}createGeometries(e){if(Object(maybe.k)(this._geometry)||Object(maybe.k)(this._checkerBoardMaterial))return;const i=MeasurementAreaVisualElement_u;Object(mat4.x)(i,this.transform);const c=this._geometry,a=[],h=Object(vec3f64.f)();c.position.forEach((e=>{Object(vec3.l)(h,e,i),a.push(h[0],h[1],h[2])}));const n=[];c.uv.forEach((e=>{n.push(e[0],e[1])}));const d=new Geometry.a([["position",{size:3,data:a,exclusive:!0}],["uv0",{size:2,data:n,exclusive:!0}]],[["position",c.triangleIndices],["uv0",c.triangleIndices]]);e.addGeometry(d,this._checkerBoardMaterial)}geometryChanged(){this.recreateGeometry()}}const MeasurementAreaVisualElement_u=Object(vec3f64.f)();var Segment=__webpack_require__("./node_modules/@arcgis/core/views/3d/interactive/visualElements/support/Segment.js"),lineStippleUtils=__webpack_require__("./node_modules/@arcgis/core/views/3d/webgl-engine/materials/lineStippleUtils.js"),locale=__webpack_require__("./node_modules/@arcgis/core/intl/locale.js"),messages=__webpack_require__("./node_modules/@arcgis/core/intl/messages.js");let I=class extends Accessor.a{constructor(e){super(e),this._handles=new Handles.a,this._params={...AreaMeasurementVisualization_U},this._path=null,this._intersectedPath=null,this._perimeter=null,this._intersectedPerimeter=null,this._projectionLines=null,this._measurementArea=null,this._areaLabel=null,this._pathLengthLabel=null,this._cursorSegmentLengthLabel=null,this._perimeterLengthLabel=null,this._pathSegments=[],this._perimeterSegments=[],this._cursorSegment=null,this._origin=Object(vec3f64.f)(),this._originTransform=Object(mat4f64.d)(),this._cursorPositionRenderSpace=Object(vec3f64.f)(),this.messages=null,this.viewData=AreaMeasurementVisualization_z,this.areaLabel=null,this.perimeterLengthLabel=null,this.loadingMessages=!0}get visible(){return this.analysisView.visible}get testData(){return{labels:{area:this._areaLabel,pathLength:this._pathLengthLabel,cursorSegmentLength:this._cursorSegmentLengthLabel,perimeterLength:this._perimeterLengthLabel}}}initialize(){const e=this.view,t=this._params;this._path=new LineVisualElement.a({view:e,attached:!0,width:t.pathLineWidth,color:t.pathLineColor,polygonOffset:!0,renderOccluded:4}),this._intersectedPath=new LineVisualElement.a({view:e,attached:!0,width:t.pathLineWidth,color:t.intersectingLineColor,polygonOffset:!0,renderOccluded:4}),this._perimeter=new LineVisualElement.a({view:e,attached:!0,width:t.perimeterLineWidth,color:t.perimeterLineColor,polygonOffset:!0,renderOccluded:4}),this._intersectedPerimeter=new LineVisualElement.a({view:e,attached:!0,width:t.perimeterLineWidth,color:t.intersectingLineColor,polygonOffset:!0,renderOccluded:4}),this._projectionLines=new LineVisualElement.a({view:e,attached:!0,width:t.projectionLineWidth,color:t.projectionLineColor,stipplePattern:Object(lineStippleUtils.a)(t.projectionLineStippleSize),polygonOffset:!0,renderOccluded:4}),this._measurementArea=new MeasurementAreaVisualElement_d({view:e,attached:!0,color1:t.areaColor1,color2:t.areaColor2}),this._areaLabel=new LabelVisualElement.a({view:this.view,attached:!0,fontSize:16}),this._pathLengthLabel=new LabelVisualElement.a({view:e,attached:!0,fontSize:12}),this._cursorSegmentLengthLabel=new LabelVisualElement.a({view:e,attached:!0,fontSize:12}),this._perimeterLengthLabel=new LabelVisualElement.a({view:e,attached:!0,fontSize:12});const i=this.analysisView.analysisViewData;this._handles.add([Object(reactiveUtils.b)((()=>[i.mode,this.visible,this.analysisView.unit,i.measurementData,i.cursorPoint]),(()=>this._update()),reactiveUtils.e),Object(reactiveUtils.b)((()=>{var t;return null==(t=e.state)?void 0:t.camera}),(()=>this._updateLabels()),reactiveUtils.e),Object(locale.c)((async()=>this._updateMessageBundle()))]),this._updateMessageBundle()}destroy(){this._measurementArea=Object(maybe.e)(this._measurementArea),this._path=Object(maybe.e)(this._path),this._intersectedPath=Object(maybe.e)(this._intersectedPath),this._perimeter=Object(maybe.e)(this._perimeter),this._intersectedPerimeter=Object(maybe.e)(this._intersectedPerimeter),this._areaLabel=Object(maybe.e)(this._areaLabel),this._pathLengthLabel=Object(maybe.e)(this._pathLengthLabel),this._cursorSegmentLengthLabel=Object(maybe.e)(this._cursorSegmentLengthLabel),this._perimeterLengthLabel=Object(maybe.e)(this._perimeterLengthLabel),this._handles=Object(maybe.e)(this._handles),this.set("view",null)}_update(){if(this.destroyed||!this.view.ready||!this.view.renderCoordsHelper)return;const e=this.analysisView.analysisViewData,t=e.measurementData;Object(maybe.k)(t)||(this._updateViewData(t,e.path,e.cursorPoint),this._updateOrigin(),this._updatePathSegments(),this._updatePerimeterSegments(),this._updateArea(),this._updateProjectionLines(),this._updateLabels())}_updateViewData(e,t,i){const r=t.isValidPolygon,n="geodesic"===e.actualMeasurementMode,a=n?e.geodesicArea:e.area;let o=1;if(a){const t=this._toPreferredAreaUnit(a,this.analysisView.unit);o=Object(mathUtils.m)(Math.sqrt(t.value)/Math.sqrt(300)),o*=Math.sqrt(Object(unitUtils.c)(1,t.unit,"square-meters")),o/=e.unitNormalizer.normalizeDistance(1)}const h={validMeasurement:r,path:t,pathVersion:t.version,cursorPoint:i,measurementData:e,mode:e.actualMeasurementMode,positionsGeographic:e.positionsGeographic,positionsRenderCoords:e.positionsRenderCoords,positionsProjected:e.positionsProjectedWorldCoords,positionsFittedRenderCoords:e.positionsFittedRenderCoords,intersectingSegments:n?e.geodesicIntersectingSegments:e.intersectingSegments,triangleIndices:n?e.geodesicTriangleIndices:e.triangleIndices,fittingMode:e.fittingMode,areaCentroid:n?e.geodesicAreaCentroidRenderCoords:e.areaCentroidRenderCoords,pathLengthLabelSegmentIndex:r?0:t.numVertices-2,perimeterLengthLabelSegmentIndex:0,checkerSize:o};this._set("viewData",h)}_updateOrigin(){const e=this.viewData;Object(support_viewUtils.a)(e.positionsRenderCoords,this._origin),Object(mat4.i)(this._originTransform),Object(mat4.a)(this._originTransform,this._originTransform,this._origin),this._measurementArea.transform=this._originTransform,this._projectionLines.transform=this._originTransform}_createSegments(e){const t=this.viewData,i=t.path,s=this.view.renderCoordsHelper.spatialReference,r=t.mode,n=[],a=[],o=[],h=t.validMeasurement?i.numVertices:i.numVertices-1;for(let l=0;l<h;++l){const h=t[e][l],m=t[e][(l+1)%i.numVertices];let c=null;switch(r){case"euclidean":c=new Segment.a(h,m);break;case"geodesic":c=new Segment.b(h,m,s)}t.intersectingSegments.has(l)?o.push(c):a.push(c),n.push(c)}return{all:n,nonIntersecting:a,intersecting:o}}_updatePathSegments(){const e=this.visible,t=this.viewData,i=this._createSegments("positionsRenderCoords"),s=t.path,r=!s.isValidPolygon,n=t.cursorPoint,o=this.view.renderCoordsHelper,h=o.spatialReference,l=t.mode;if(this._cursorSegment=null,s.numVertices>0&&r&&Object(maybe.l)(n)&&o.toRenderCoords(n,this._cursorPositionRenderSpace)){const e=t.positionsRenderCoords[s.numVertices-1],r=this._cursorPositionRenderSpace;let n=null;switch(l){case"euclidean":n=new Segment.a(e,r);break;case"geodesic":n=new Segment.b(e,r,h)}i.nonIntersecting.push(n),this._cursorSegment=n}this._path.setGeometryFromSegments(i.nonIntersecting,this._origin),this._path.visible=e,this._intersectedPath.setGeometryFromSegments(i.intersecting,this._origin),this._intersectedPath.visible=e,this._pathSegments=i.all}_updatePerimeterSegments(){const e=this.visible&&"euclidean"===this.viewData.mode,t=this._createSegments("positionsFittedRenderCoords");this._perimeter.setGeometryFromSegments(t.nonIntersecting,this._origin),this._perimeter.visible=e,this._intersectedPerimeter.setGeometryFromSegments(t.intersecting,this._origin),this._intersectedPerimeter.visible=e,this._perimeterSegments=t.all}_updateArea(){const e=this.viewData;switch(e.mode){case"euclidean":this._updateAreaEuclidean(e);break;case"geodesic":this._updateAreaGeodesic()}}_updateAreaEuclidean(e){const t=this.visible;e.validMeasurement&&0===e.intersectingSegments.size&&e.triangleIndices?(this._measurementArea.geometry={uv:e.positionsProjected,position:e.positionsFittedRenderCoords,triangleIndices:e.triangleIndices},this._measurementArea.size=[e.checkerSize,e.checkerSize],this._measurementArea.visible=t):this._measurementArea.visible=!1}_updateAreaGeodesic(){this._measurementArea.visible=!1}_updateProjectionLines(){const e=this.viewData,t=this.visible,i=e.path,s=e.mode;if(i.numVertices>0&&e.validMeasurement&&"euclidean"===s){const s=[];for(let t=0;t<i.numVertices;++t){const i=Object(vec3f64.f)();Object(vec3.l)(i,e.positionsRenderCoords[t],this._origin);const r=Object(vec3f64.f)();Object(vec3.l)(r,e.positionsFittedRenderCoords[t],this._origin),s.push([i,r])}this._projectionLines.geometry=s,this._projectionLines.visible=t}else this._projectionLines.geometry=null,this._projectionLines.visible=!1}_updateLabels(){if(this.destroyed)return;const e=this.viewData,t=e.path;if(!t)return;const i=e.measurementData,s=e.mode,r=!t.isValidPolygon,n=this.visible,h=this._formatAreaLabel(this.messages,"geodesic"===s?i.geodesicArea:i.area,this.analysisView.unit);Object(maybe.l)(h)?(this._areaLabel.geometry={type:"point",point:e.areaCentroid},this._areaLabel.text=h,this._areaLabel.visible=e.validMeasurement&&0===e.intersectingSegments.size&&n):this._areaLabel.visible=!1,this._set("areaLabel",Object(maybe.u)(h));const l=this._formatLengthLabel(this.messages,"geodesic"===s?i.geodesicPathLength:i.pathLength,this.analysisView.unit);if(Object(maybe.l)(l)&&e.pathLengthLabelSegmentIndex>=0&&e.pathLengthLabelSegmentIndex<this._pathSegments.length){const i=this._pathSegments[e.pathLengthLabelSegmentIndex],s=Object(maybe.l)(this._cursorSegment)?this._cursorSegment:AreaMeasurementVisualization_k;this._pathLengthLabel.distance=this._params.labelDistance,this._pathLengthLabel.geometry={type:"corner",left:i,right:s},this._pathLengthLabel.text=l,this._pathLengthLabel.visible=r&&t.numVertices>0&&n}else this._pathLengthLabel.visible=!1;const m="geodesic"===s?e.measurementData.geodesicCursorSegmentLength:e.measurementData.cursorSegmentLength;if(Object(maybe.l)(m)){const e=this._formatLengthLabel(this.messages,m,this.analysisView.unit);this._cursorSegmentLengthLabel.distance=this._params.labelDistance,this._cursorSegmentLengthLabel.geometry=Object(maybe.l)(this._cursorSegment)?{type:"segment",segment:this._cursorSegment,sampleLocation:"end"}:null,this._cursorSegmentLengthLabel.anchor="bottom",this._cursorSegmentLengthLabel.text=Object(maybe.u)(e),this._cursorSegmentLengthLabel.visible=r&&0!==m.value&&n}else this._cursorSegmentLengthLabel.visible=!1;this._cursorSegmentLengthLabel.overlaps(this._pathLengthLabel)&&(this._cursorSegmentLengthLabel.visible=!1),this._pathLengthLabel.overlaps(this._areaLabel)&&(this._pathLengthLabel.visible=!1);const c="geodesic"===e.mode,d=c?i.geodesicPathLength:i.perimeterLength,p=Object(maybe.u)(null!=d?this._formatLengthLabel(this.messages,d,this.analysisView.unit):null);if(this._set("perimeterLengthLabel",Object(maybe.u)(p)),e.validMeasurement&&0===e.intersectingSegments.size){this._perimeterLengthLabel.distance=this._params.labelDistance,this._perimeterLengthLabel.anchor="top",this._perimeterLengthLabel.text=p,this._perimeterLengthLabel.visible=!0;let t=!0;for(let i=0;i<e.path.numVertices;++i){const s=(e.perimeterLengthLabelSegmentIndex+i)%e.path.numVertices,r=c?this._pathSegments[s]:this._perimeterSegments[s];if(t=!0,this._perimeterLengthLabel.geometry={type:"segment",segment:r,sampleLocation:"center"},!this._perimeterLengthLabel.overlaps(this._areaLabel))break;t=!1}this._perimeterLengthLabel.visible=t&&n}else this._perimeterLengthLabel.visible=!1}_toPreferredAreaUnit(e,t){return e.toUnit(this._preferredAreaUnit(e,t))}_preferredAreaUnit(e,t){switch(t){case"metric":return Object(unitUtils.r)(e.value,e.unit);case"imperial":return Object(unitUtils.o)(e.value,e.unit);default:return t}}_preferredLengthUnit(e,t){const i=this._deriveLengthUnitFromAreaUnit(t);switch(i){case"metric":return Object(unitUtils.s)(e.value,e.unit);case"imperial":return Object(unitUtils.p)(e.value,e.unit);default:return i}}_deriveLengthUnitFromAreaUnit(e){switch(e){case"metric":case"ares":case"hectares":return"metric";case"imperial":case"acres":return"imperial";case"square-inches":return"inches";case"square-feet":return"feet";case"square-yards":return"yards";case"square-miles":return"miles";case"square-us-feet":return"us-feet";case"square-millimeters":return"millimeters";case"square-centimeters":return"centimeters";case"square-decimeters":return"decimeters";case"square-meters":return"meters";case"square-kilometers":return"kilometers"}throw new Error("unhandled area unit")}_formatAreaLabel(e,t,i){return e&&t&&Object(quantityFormatUtils.b)(e,t,this._preferredAreaUnit(t,i))}_formatLengthLabel(e,t,i){return e&&t&&Object(quantityFormatUtils.b)(e,t,this._preferredLengthUnit(t,i))}_updateMessageBundle(){this.loadingMessages=!0,Object(messages.a)("esri/core/t9n/Units").then((e=>{this.messages=e,this.view&&this._update()})).finally((()=>{this.loadingMessages=!1}))}};Object(tslib_es6.a)([Object(property.b)()],I.prototype,"view",void 0),Object(tslib_es6.a)([Object(property.b)()],I.prototype,"messages",void 0),Object(tslib_es6.a)([Object(property.b)()],I.prototype,"analysis",void 0),Object(tslib_es6.a)([Object(property.b)()],I.prototype,"viewData",void 0),Object(tslib_es6.a)([Object(property.b)()],I.prototype,"analysisView",void 0),Object(tslib_es6.a)([Object(property.b)({readOnly:!0})],I.prototype,"areaLabel",void 0),Object(tslib_es6.a)([Object(property.b)({readOnly:!0})],I.prototype,"perimeterLengthLabel",void 0),Object(tslib_es6.a)([Object(property.b)()],I.prototype,"loadingMessages",void 0),Object(tslib_es6.a)([Object(property.b)()],I.prototype,"visible",null),I=Object(tslib_es6.a)([Object(subclass.a)("esri.views.3d.analysis.AreaMeasurement.support.AreaMeasurementVisualization")],I);const AreaMeasurementVisualization_U={laserLineGlowColor:[1,.5,0],laserLineGlowWidth:8,laserLineGlowFalloff:8,laserLineInnerColor:[1,1,1],laserLineInnerWidth:1,laserLineGlobalAlpha:.75,laserLineEnabled:!0,handleColor:[1,.5,0],handleOpacity:.5,handleRadius:5,handleRadiusHovered:10,handleRadiusMouse:10,handleRadiusTouch:25,pathLineColor:[1,.5,0,1],pathLineWidth:3,intersectingLineColor:[1,.2,0,1],perimeterLineColor:[1,.5,0,1],perimeterLineWidth:2,projectionLineColor:[1,.5,0,1],projectionLineWidth:2,projectionLineStippleSize:5,areaColor1:[1,.5,0,.5],areaColor2:[1,1,1,.5],fillColor:[1,.5,0,.5],lineSubdivisions:64,labelDistance:25},AreaMeasurementVisualization_z={validMeasurement:!1,path:null,pathVersion:-1,cursorPoint:null,measurementData:null,mode:null,positionsGeographic:null,positionsRenderCoords:null,positionsProjected:null,positionsFittedRenderCoords:null,intersectingSegments:null,triangleIndices:null,fittingMode:null,areaCentroid:null,pathLengthLabelSegmentIndex:null,perimeterLengthLabelSegmentIndex:null,checkerSize:null},AreaMeasurementVisualization_k=new Segment.a(Object(vec3f64.f)(),Object(vec3f64.f)());let AreaMeasurementView3D_h=class extends(Object(AnalysisView3D.a)(Accessor.a)){constructor(a){super(a),this.type="area-measurement-view-3d",this.analysisViewData=new AreaMeasurementView3DData_i}initialize(){this.analysisViewData.path.view=this.view,this.analysisViewData.path.areaMeasurement=this.analysis,this.analysisVisualization=new I({view:this.view,analysis:this.analysis,analysisView:this}),this.analysisController=new AreaMeasurementController_h({view:this.view,analysis:this.analysis,analysisViewData:this.analysisViewData})}destroy(){this.analysisController=Object(maybe.e)(this.analysisController),this.analysisVisualization=Object(maybe.e)(this.analysisVisualization),this.analysisViewData=Object(maybe.e)(this.analysisViewData)}get updating(){var a;return!(null==(a=this.analysisVisualization)||!a.loadingMessages)}get result(){const a=this.analysisViewData.measurementData;return Object(maybe.l)(a)?"euclidean"===a.actualMeasurementMode?{area:a.area,pathLength:a.perimeterLength,mode:"euclidian"}:{area:a.geodesicArea,pathLength:a.pathLength,mode:"geodesic"}:{area:null,mode:null,pathLength:null}}get unit(){return Object(maybe.v)(this.analysis.unit,this._defaultUnit)}get testData(){return{visualization:this.analysisVisualization,controller:this.analysisController}}};Object(tslib_es6.a)([Object(property.b)()],AreaMeasurementView3D_h.prototype,"type",void 0),Object(tslib_es6.a)([Object(property.b)()],AreaMeasurementView3D_h.prototype,"analysis",void 0),Object(tslib_es6.a)([Object(property.b)()],AreaMeasurementView3D_h.prototype,"updating",null),Object(tslib_es6.a)([Object(property.b)()],AreaMeasurementView3D_h.prototype,"analysisVisualization",void 0),Object(tslib_es6.a)([Object(property.b)()],AreaMeasurementView3D_h.prototype,"analysisController",void 0),Object(tslib_es6.a)([Object(property.b)()],AreaMeasurementView3D_h.prototype,"result",null),Object(tslib_es6.a)([Object(property.b)()],AreaMeasurementView3D_h.prototype,"analysisViewData",void 0),Object(tslib_es6.a)([Object(property.b)()],AreaMeasurementView3D_h.prototype,"unit",null),Object(tslib_es6.a)([Object(property.b)(defaultUnit.a)],AreaMeasurementView3D_h.prototype,"_defaultUnit",void 0),AreaMeasurementView3D_h=Object(tslib_es6.a)([Object(subclass.a)("esri.views.3d.analysis.AreaMeasurement.AreaMeasurementView3D")],AreaMeasurementView3D_h);const AreaMeasurementView3D_m=AreaMeasurementView3D_h}}]);